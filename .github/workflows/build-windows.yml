name: Build Windows MSI Installer

# 触发条件：当你打一个 tag，例如 v1.0.0
on:
  push:
    tags:
      - 'v*'  # 匹配 v1.0, v1.2.3 等格式

jobs:
  build-msi:
    runs-on: windows-latest
    env:
      APP_NAME: EasyPostman
      MAIN_CLASS: com.laker.postman.App
      JAR_PREFIX: easy-tools-
      ICON_PATH: assets/win/EasyPostman.ico
      OUTPUT_DIR: dist
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Java 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Install Maven
        run: |
          choco install maven -y --no-progress
          refreshenv

      - name: Read Version from pom.xml
        id: get_version
        run: |
          $version = Select-String -Path pom.xml -Pattern '<version>(.*?)</version>' | ForEach-Object { $_.Matches.Groups[1].Value }
          echo "VERSION=$version" >> $env:GITHUB_ENV
          Write-Output "::set-output name=detected_version::$version"
        shell: powershell

      - name: Build JAR with Maven
        run: mvn clean package -DskipTests=false

      - name: Create Minimal Runtime with jlink
        run: |
          jlink ^
            --add-modules java.base,java.desktop,java.logging,jdk.unsupported,java.naming,java.net.http,java.prefs,java.sql,java.security.sasl,java.security.jgss,jdk.crypto.ec,java.management,java.management.rmi,jdk.crypto.cryptoki ^
            --strip-debug ^
            --no-header-files ^
            --no-man-pages ^
            --compress=2 ^
            --output target/runtime

      - name: Prepare Input Directory for jpackage
        run: |
          mkdir target\dist-input
          copy target\${{ env.JAR_PREFIX }}${{ env.VERSION }}.jar target\dist-input\

      - name: Install WiX Toolset 3.14 (required for MSI)
        run: |
          echo Downloading WiX Toolset 3.14...
          curl -L -o wix314.exe https://github.com/wixtoolset/wix3/releases/download/wix314rtm/wix314.exe

          echo Installing WiX silently...
          start /wait wix314.exe /q

          echo Verify candle is available...
          where candle
        shell: cmd

      - name: Run jpackage to Build MSI Installer
        run: |
          jpackage ^
            --input target/dist-input ^
            --main-jar ${{ env.JAR_PREFIX }}${{ env.VERSION }}.jar ^
            --main-class ${{ env.MAIN_CLASS }} ^
            --runtime-image target/runtime ^
            --type msi ^
            --name "${{ env.APP_NAME }}" ^
            --app-version "${{ env.VERSION }}" ^
            --dest "${{ env.OUTPUT_DIR }}" ^
            --icon "${{ env.ICON_PATH }}" ^
            --vendor "Laker" ^
            --copyright "© 2025 Laker" ^
            --win-shortcut ^
            --win-menu ^
            --win-upgrade-uuid 28607609-97b7-4212-9285-04ef64a4946c ^
            --win-dir-chooser ^
            --win-per-user-install ^
            --win-menu-group "EasyTools" ^
            --win-help-url "https://gitee.com/lakernote/easy-postman" ^
            --java-options "-Xms256m" ^
            --java-options "-Xmx512m" ^
            --java-options "-Dfile.encoding=UTF-8"

      - name: Upload MSI Installer Artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.APP_NAME }}-v${{ env.VERSION }}-windows-installer
          path: ${{ env.OUTPUT_DIR }}/